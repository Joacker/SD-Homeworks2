###############-VERSION-###################
version: '3.3'

################-SERVICIOS-################
services:

###################-CLIENTE-###########################
   cliente:
    container_name: cliente
    build: ./client
    depends_on:
        - postgres
        - servidor
    ports:
        - "4000:4000"
    #environment:
    #    - REDIS_URL=redis://cache

###################-SERVIDOR-#########################   
   servidor:
    container_name: servidor
    build: ./server
    depends_on:
        - postgres
    #environment:
    #    - REDIS_URL=redis://cache

    
#################-POSTGRES-##########################
   postgres:
    container_name: postgres
    image: docker.io/bitnami/postgresql:11
    volumes:
        - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
        - "3000:5432"
    environment:
        - POSTGRESQL_USER=postgres
        - POSTGRESQL_DATABASE=membrillo
        - ALLOW_EMPTY_PASSWORD=yes
        - POSTGRESQL_PASSWORD=postgres


#################-zookeeper-############################
   zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes


#################-node-Api-############################
   node-api:
    container_name: api-login
    restart: always
    build:
      context: ./server/api/
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: myuser
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_DATABASE: membrillo
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    ports:
      - "3000:80"
    volumes:
      - ./server/api:/usr/src/app
    depends_on:
      - "postgres"

#################-node-Api-blocked-############################
   node-api-blocked:
    container_name: api-blocked
    restart: always
    build:
      context: ./server/error/
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    ports:
      - "5000:80"
    volumes:
      - ./server/error:/usr/src/app
    depends_on:
      - "postgres"
#################-kafka-############################
   kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper